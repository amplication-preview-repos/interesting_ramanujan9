datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Bet {
  amount    Float?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  match     Match?   @relation(fields: [matchId], references: [id])
  matchId   String?
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Match {
  bets      Bet[]
  createdAt DateTime         @default(now())
  date      DateTime?
  id        String           @id @default(cuid())
  result    EnumMatchResult?
  team1     String?
  team2     String?
  updatedAt DateTime         @updatedAt
}

model Transaction {
  amount    Float?
  createdAt DateTime                  @default(now())
  id        String                    @id @default(cuid())
  typeField EnumTransactionTypeField?
  updatedAt DateTime                  @updatedAt
  user      User?                     @relation(fields: [userId], references: [id])
  userId    String?
}

model Team {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  name      String?
  updatedAt DateTime @updatedAt
}

model User {
  balance      Float?
  bets         Bet[]
  createdAt    DateTime      @default(now())
  email        String?       @unique
  firstName    String?
  id           String        @id @default(cuid())
  lastName     String?
  password     String
  roles        Json
  transactions Transaction[]
  updatedAt    DateTime      @updatedAt
  username     String        @unique
}

enum EnumMatchResult {
  Option1
}

enum EnumTransactionTypeField {
  Option1
}
